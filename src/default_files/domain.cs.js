const text = "using Neo.SmartContract.Framework;\nusing Neo.SmartContract.Framework.Services.Neo;\n\nnamespace Neo.SmartContract\n{\n    public class Domain : Framework.SmartContract \n    {\n        public static object Main(string operation, params object[] args)\n        {\n            switch (operation)\n            {\n                case \"query\":\n                    return Query((string)args[0]);\n                case \"register\":\n                    return Register((string)args[0], (byte[])args[1]);\n                case \"transfer\":\n                    return Transfer((string)args[0], (byte[])args[1]);\n                case \"delete\":\n                    return Delete((string)args[0]);\n                default:\n                    return false;\n            }\n        }\n\n        private static byte[] Query(string domain)\n        {\n            return Storage.Get(Storage.CurrentContext, domain);\n        }\n\n        private static bool Register(string domain, byte[] owner)\n        {\n            if (!Runtime.CheckWitness(owner)) return false;\n            byte[] value = Storage.Get(Storage.CurrentContext, domain);\n            if (value != null) return false;\n            Storage.Put(Storage.CurrentContext, domain, owner);\n            return true;\n        }\n\n        private static bool Transfer(string domain, byte[] to)\n        {\n            if (!Runtime.CheckWitness(to)) return false;\n            byte[] from = Storage.Get(Storage.CurrentContext, domain);\n            if (from == null) return false;\n            if (!Runtime.CheckWitness(from)) return false;\n            Storage.Put(Storage.CurrentContext, domain, to);\n            return true;\n}\n\n        private static bool Delete(string domain)\n        {\n            byte[] owner = Storage.Get(Storage.CurrentContext, domain);\n            if (owner == null) return false;\n            if (!Runtime.CheckWitness(owner)) return false;\n            Storage.Delete(Storage.CurrentContext, domain);\n            return true;\n        }\n    }\n}";

export default text;